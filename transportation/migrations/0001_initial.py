# Generated by Django 3.0.6 on 2020-05-26 12:06

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phone_field.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_moderator', models.BooleanField(default=False, help_text='Designates whether the user can moderate the requests, vehicles & drivers.', verbose_name='moderator status')),
                ('is_driver', models.BooleanField(default=False, help_text='Designates whether the user is a driver.', verbose_name='driver status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('num', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='Budget #')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('num', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='Department #')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Active'), (2, 'Inactive'), (3, 'Retired')], default=0, verbose_name='Status')),
                ('first_name', models.CharField(max_length=32, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=32, verbose_name='Last Name')),
                ('license_num', models.CharField(max_length=10, verbose_name='License #')),
                ('expiration_date', models.DateField(verbose_name='License Expiration Date')),
                ('birth_date', models.DateField(verbose_name='Date of Birth')),
                ('state', models.CharField(max_length=2, verbose_name='State')),
                ('phone', phone_field.models.PhoneField(blank=True, max_length=31, null=True, verbose_name='Phone #')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Address')),
                ('restrictions', models.CharField(blank=True, max_length=30, null=True, verbose_name='License Restrictions')),
                ('has_cdl', models.BooleanField(default=False, verbose_name='CDL Status')),
                ('notes', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TripRequest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Pending'), (2, 'Approved'), (3, 'Denied'), (4, 'Completed'), (5, 'Cancelled'), (6, 'Other'), (7, 'Returned')], default=1, verbose_name='Status')),
                ('submitted', models.DateTimeField(auto_now_add=True, verbose_name='Submitted')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('contact_fn', models.CharField(max_length=32, verbose_name='First Name')),
                ('contact_ln', models.CharField(max_length=32, verbose_name='Last Name')),
                ('contact_phone', phone_field.models.PhoneField(max_length=31, verbose_name='Phone #')),
                ('contact_email', models.EmailField(max_length=254, verbose_name='Email Address')),
                ('party_count', models.PositiveSmallIntegerField(default=1, verbose_name='Party Count')),
                ('depart_est', models.DateTimeField(verbose_name='Depart Time (Estimate)')),
                ('return_est', models.DateTimeField(verbose_name='Return Time (Estimate)')),
                ('depart_act', models.DateTimeField(blank=True, null=True, verbose_name='Depart Time (Actual)')),
                ('return_act', models.DateTimeField(blank=True, null=True, verbose_name='Return Time (Actual)')),
                ('destination', models.CharField(max_length=255, verbose_name='Destination')),
                ('purpose', models.TextField(verbose_name='Purpose')),
                ('trailer', models.BooleanField(default=False, verbose_name='Trailer')),
                ('agreement_accepted', models.BooleanField(default=False, verbose_name='Accept Agreement')),
                ('mileage_est', models.PositiveIntegerField(verbose_name='Mileage (Estimate)')),
                ('mileage_act', models.PositiveIntegerField(blank=True, null=True, verbose_name='Mileage (Actual)')),
                ('card_num', models.CharField(blank=True, max_length=32, null=True, verbose_name='Card #')),
                ('key_num', models.CharField(blank=True, max_length=32, null=True, verbose_name='Key #')),
                ('fuel_cost', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, null=True, verbose_name='Fuel Cost')),
                ('is_vehicle_clean', models.BooleanField(default=False, verbose_name='Vehicle Cleanliness')),
                ('is_vehicle_parked_proper', models.BooleanField(default=False, verbose_name='Vehicle Parked Correctly')),
                ('vehicle_problems', models.CharField(blank=True, max_length=256, null=True)),
                ('budget', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='transportation.Budget', verbose_name='Budget')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='transportation.Department', verbose_name='Department')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='trips', to='transportation.Driver', verbose_name='Driver')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='manager', to=settings.AUTH_USER_MODEL, verbose_name='Manager')),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='transportation.Organization', verbose_name='Organization')),
                ('requestor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='requestor', to=settings.AUTH_USER_MODEL, verbose_name='Requestor')),
            ],
            options={
                'get_latest_by': 'updated',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('num', models.PositiveIntegerField(verbose_name='Vehicle #')),
                ('type', models.PositiveSmallIntegerField(choices=[(0, 'Unknown'), (1, 'Car'), (2, 'Passenger Van'), (3, 'Cargo Van'), (4, 'Bus'), (5, 'Coach Bus'), (6, 'Road Bus'), (7, 'Truck'), (8, 'Non-CDL Bus'), (9, 'Golf Cart')], default=0, verbose_name='Vehicle Type')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'None'), (1, 'Active'), (2, 'Inactive'), (3, 'Retired'), (4, 'Gifted'), (5, 'Sold'), (6, 'Other')], verbose_name='Status')),
                ('year', models.PositiveSmallIntegerField(verbose_name='Year')),
                ('make', models.CharField(max_length=30, verbose_name='Make')),
                ('model', models.CharField(max_length=30, verbose_name='Model')),
                ('title_num', models.CharField(max_length=30, verbose_name='Title #')),
                ('vin', models.CharField(max_length=40, verbose_name='VIN #')),
                ('license_plate', models.CharField(max_length=10, verbose_name='Plate #')),
                ('reg_expire_date', models.DateField(verbose_name='Registration')),
                ('mileage', models.PositiveIntegerField(default=0, verbose_name='Mileage')),
                ('purchase_date', models.DateField(blank=True, null=True, verbose_name='Purchase Date')),
                ('purchase_cost', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=12, null=True, verbose_name='Purchase Price')),
                ('storage_location', models.CharField(blank=True, max_length=128, null=True, verbose_name='Storage Location')),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='transportation.Organization', verbose_name='Organization')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleMaintenance',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(verbose_name='Maintenance Date')),
                ('category', models.IntegerField(choices=[(0, 'Unknown'), (1, 'General'), (2, 'Engine'), (3, 'Body'), (4, 'Electrical'), (5, 'Inspection'), (6, 'Other')], default=0, verbose_name='Category')),
                ('cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=8, verbose_name='Cost')),
                ('mileage', models.PositiveIntegerField(verbose_name='Mileage')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenances', to='transportation.Vehicle', verbose_name='Vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleActivity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('type', models.PositiveSmallIntegerField(choices=[(0, 'Created'), (1, 'Editted'), (2, 'Deleted'), (3, 'Created Maintenance'), (4, 'Editted Maintenance'), (5, 'Deleted Maintenance')])),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='transportation.Vehicle', verbose_name='Vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='TripRequestActivity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('type', models.PositiveSmallIntegerField(choices=[(0, 'Created'), (1, 'Editted'), (2, 'Deleted'), (3, 'Pending'), (4, 'Approved'), (5, 'Denied'), (6, 'Finished'), (7, 'Cancelled'), (8, 'Archived')])),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='transportation.TripRequest', verbose_name='Trip Request')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'get_latest_by': 'timestamp',
            },
        ),
        migrations.AddField(
            model_name='triprequest',
            name='vehicle',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='trips', to='transportation.Vehicle', verbose_name='Vehicle'),
        ),
        migrations.AddField(
            model_name='driver',
            name='orgs',
            field=models.ManyToManyField(to='transportation.Organization', verbose_name='Organizations'),
        ),
        migrations.AddField(
            model_name='department',
            name='org',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='transportation.Organization', verbose_name='Organization'),
        ),
        migrations.AddField(
            model_name='budget',
            name='org',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budgets', to='transportation.Organization', verbose_name='Organization'),
        ),
    ]
